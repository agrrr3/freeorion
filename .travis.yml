language: cpp
matrix:
  include:
    - os: linux
      services:
        - docker
      env:
        - BUILD_UNITTEST=true
install:
  - >
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      # Download build environment in a docker container
      docker pull freeorion/freeorion-travis-build
    fi
  - >
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update # Circumvent Ruby runtime error ; see travis-ci/travis-ci#8552
      brew install cmake
      wget --output-document=FreeOrionSDK.dmg https://github.com/freeorion/freeorion-sdk/releases/download/v8/FreeOrionSDK_8_Clang-MacOSX-10.9-x86_64.dmg
      hdiutil attach FreeOrionSDK.dmg
      tar -xjf /Volumes/FreeOrionSDK/dep.tar.bz2 -C Xcode
      hdiutil detach /Volumes/FreeOrionSDK
    fi
before_script:
  - >
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      git remote add -t master -m master upstream https://github.com/freeorion/freeorion.git
      git fetch upstream
      git log -1 upstream/master
      # Add transparent cmake function to allow possible cross platform use of
      # build sections.
      function cmake {
          docker run -v "${TRAVIS_BUILD_DIR}:/freeorion" -w /freeorion/build freeorion/freeorion-travis-build /usr/bin/cmake $@
      }
    fi
  - mkdir build
  - cd build
script:
  - >
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${BUILD_UNITTEST}" == "true" ]]; then
      git merge --no-commit upstream/master &&
      cmake -DBUILD_HEADLESS=ON -DBUILD_TESTING=ON .. &&
      cmake --build . -- -j 2 &&
      cmake --build . --target unittest &&
      cd ../default/ &&
      python -m compileall -q .
    fi
  - >
    if [[ "${TRAVIS_OS_NAME}" == "osx" && -z "${BUILD_APIDOC}" ]]; then
      cmake -GXcode ..
      cmake --build . --config Release -- -parallelizeTargets -jobs $(sysctl hw.ncpu | awk '{print $2}')
    fi
