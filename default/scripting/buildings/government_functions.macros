/* Every outpost gets troops send by the SEAT of DEFENSE. This value determines the base garrison. */
MINIMAL_IMPERIAL_GARRISON
'''3'''

GOVERNMENT_FUNCTION_FOREIGN_ICON
'''icons/building/shield.png'''

GEN_SITREPMESSAGE_BUILDING_HAS_SPECIES_SENDS_MESSAGE_TEXT_
'''GenerateSitRepMessage
                    message = "MESSAGE_BUILDING_PLANET_SPECIES_RAW"
                    label = "MESSAGE_BUILDING_PLANET_SPECIES_RAW_LABEL"
                    icon = "[[GOVERNMENT_FUNCTION_FOREIGN_ICON]]"
                    parameters = [
                        tag = "rawtext" data = "@1@"
                        tag = "building" data = Source.ID
                        tag = "planet" data = Source.PlanetID
                        tag = "species" data = Source.Planet.Species
                    ]
                    empire = Source.Owner'''

/* Takes a macro which takes two parameters. This will pass BAD... to the macro_2 second parameter
#1 <first-parameter-to-pass-macro_2>
#2 <macro_2>
*/
FOR2_BAD_GOOD_GREAT_ULTIMATE_
'''[[@2@(@1@,BAD)]]
[[@2@(@1@,GOOD)]]
[[@2@(@1@,GREAT)]]
[[@2@(@1@,ULTIMATE)]]'''

/*
#1 <government type>
#2 <species detection bonus level>
*/
EFFECTS_GROUP_GOVERNMENT_FUNCTION_DETECTION_BONUS_2
'''EffectsGroup // Add seat's species detection bonus to planets with scanning facility
            scope = And [
                Planet 
                Contains Building name = "BLD_SCANNING_FACILITY"
                OwnedBy empire = Source.Owner
            ]
            activation = ContainedBy And [
                // Source is the seat building
                [[CONDITION_GOVERNMENT_TYPE_IS_(@1@)]]
                Planet
                Species
                HasTag name = "@2@_DETECTION"
            ]
            // preventing species bonus from planet
            stackinggroup = "SPECIES_DETECTION_STACK"
            priority = [[EARLY_PRIORITY]]
            effects = SetDetection value = Value + [[SPECIES_PLANET_@2@_DETECTION_BONUS]]'''

/*
#1 <government type>
#2 <species detection bonus level>
*/
EFFECTS_GROUP_GOVERNMENT_FUNCTION_STEALTH_BONUS_2
'''EffectsGroup // Add seat's species stealth bonus to outposts
            scope = And [
                Planet 
                Population high = 0.0
                OwnedBy empire = Source.Owner
            ]
            activation = And [
                // Source is the seat building
                Number low = 1 condition = And [
                    Object id = Source.PlanetID
                    Species
                    HasTag name = "@2@_STEALTH"
                ]
                [[CONDITION_GOVERNMENT_TYPE_IS_(@1@)]]
            ]
            // preventing species bonus from planet
            stackinggroup = "SPECIES_STEALTH_STACK"
            priority = [[EARLY_PRIORITY]]
            effects = SetStealth value = Value [[PLUSMINUS_SPECIES_PLANET_@2@_STEALTH_BONUS]]'''
            
// OwnerHasTech name = "DEF_GARRISON_1"
/*
#1 <government type>
*/
EFFECT_GROUPS_GOVERNMENT_FUNCTION_DEFENSE
'''/* EFFECT_GOVERNMENT_FUNCTION_DEFENSE: on outposts use troop indicator for garrison/bunker */
[[EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS]]
[[FOR2_BAD_GOOD_GREAT_ULTIMATE_(@1@,EFFECTS_GROUP_GOVERNMENT_FUNCTION_STEALTH_BONUS_2)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,NO)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,BAD)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,GOOD)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,GREAT)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,ULTIMATE)]]
[[EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_AVERAGE_DEFENSE_TROOPS(@1@)]]
'''


/*
#1 <government type>
#2 <troop skill level>
*/
EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS
'''/* EFFECT_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_XXX_DEFENSE_TROOPS(@1@,@2@) */
EffectsGroup
            scope = And [
                Planet
                OwnedBy empire = Source.Owner
                Population high = 0.0
            ]
            activation = ContainedBy And [
                // Source is the seat building
                [[CONDITION_GOVERNMENT_TYPE_IS_(@1@)]]
                Planet
                Species
                HasTag name = "@2@_DEFENSE_TROOPS"
            ]
            stackinggroup = "GOVERNMENT_FUNCTION_DEFENSE_STACK"
            accountinglabel = "GOVERNMENT_FUNCTION_DEFENSE_LABEL" 
            priority = [[DEFAULT_PRIORITY]]
            effects = [
                SetMaxTroops value = Max ([[MINIMAL_IMPERIAL_GARRISON]] * [[@2@_DEFENSE_TROOPS_MULTIPLICATOR]], Value * [[@2@_DEFENSE_TROOPS_MULTIPLICATOR]] )
            ]'''

/* This is for setting the minimal garrison. Also species should maybe tagged with AVERAGE_DEFENSE_TROOPS, then this extra effect wouldnt be necessary
#1 <government type>
*/
EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_AVERAGE_DEFENSE_TROOPS
'''/* EFFECTS_GROUP_GOVERNMENT_FUNCTION_DEFENSE_FOR_AVERAGE_DEFENSE_TROOPS(@1@) */
EffectsGroup
            scope = And [
                Planet
                OwnedBy empire = Source.Owner
                Population high = 0.0
            ]
            activation = ContainedBy And [
                // Source is the seat building
                [[CONDITION_GOVERNMENT_TYPE_IS_(@1@)]]
                Planet
                Species
                /* tag the species with AVERAGE_DEFENSE_TROOPS */
                //HasTag name = "@2@_DEFENSE_TROOPS" 
            ]
            // we rely on effect group evaluation order that all but average are already set
            stackinggroup = "GOVERNMENT_FUNCTION_DEFENSE_STACK"
            accountinglabel = "GOVERNMENT_FUNCTION_DEFENSE_LABEL" 
            priority = [[DEFAULT_PRIORITY]]
            effects = [
                SetMaxTroops value = Max ([[MINIMAL_IMPERIAL_GARRISON]], Value )
            ]'''

/*
#1 <government type>
*/
EFFECT_GROUPS_GOVERNMENT_FUNCTION_EDUCATION
'''/* EFFECT_GOVERNMENT_FUNCTION_EDUCATION: ?? */
[[EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS]]
EffectsGroup
            scope = Source
            activation = None
            effects = NoOp
'''

/*
#1 <government type>
*/
EFFECT_GROUPS_GOVERNMENT_FUNCTION_INTERIOR
'''/* EFFECT_GOVERNMENT_FUNCTION_INTERIOR: ?? */
[[EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS]]
EffectsGroup
            scope = Source
            activation = None
            effects = NoOp
'''

/*
#1 <government type>
*/
EFFECT_GROUPS_GOVERNMENT_FUNCTION_FOREIGN
'''/* // EFFECT_GOVERNMENT_FUNCTION_FOREIGN(@1@) */
[[EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS]]
                // Get spies from natives and neighbors if in supply range (or a little outside)
                // CreateShip designname = "SM_BLACK_KRAKEN" empire = Source.Owner
                // Make non-friendly neighbors unhappy
                // Add detection bonus for 
                [[FOR2_BAD_GOOD_GREAT_ULTIMATE_(@1@,EFFECTS_GROUP_GOVERNMENT_FUNCTION_DETECTION_BONUS_2)]]
'''

/*
#1 <government type>
*/
EFFECT_GROUPS_GOVERNMENT_FUNCTION_PROPAGANDA
'''/* EFFECT_GOVERNMENT_FUNCTION_PROPAGANDA: ?? */
[[EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS]]
EffectsGroup
            scope = Source
            activation = None
            effects = NoOp
'''

/* Applies happiness for planets with population with the same metabolism
#1 <metabolism-type>
*/
EFFECTS_GROUP_HAPPINESS_FOR_METABOLISM_
'''EffectsGroup
            scope = And [
                PopulationCenter
                Species
                HasTag name = "@1@"
                OwnedBy empire = Source.Owner
            ]
            activation = ContainedBy HasTag name = "@1@"
            accountinglabel = "GOVERNMENT_FUNCTION_HAPPINESS_FOR_METABOLISM_LABEL"
            priority = [[DEFAULT_PRIORITY]]
            effects = [
                SetTargetHappiness value = Value + [[GOVERNMENT_FUNCTION_HAPPINESS_FOR_METABOLISM]]
            ]'''

EFFECTS_GROUPS_GOVERNMENT_FUNCTION_HAPPINESS
'''EffectsGroup /* add happiness for species */
            scope = And [
                PopulationCenter
                Species name = Source.Planet.Species
                OwnedBy empire = Source.Owner
            ]
            activation = Source
            accountinglabel = "GOVERNMENT_FUNCTION_HAPPINESS_FOR_SPECIES_LABEL"
            priority = [[DEFAULT_PRIORITY]]
            effects = [
                    SetTargetHappiness value = Value + [[GOVERNMENT_FUNCTION_HAPPINESS_FOR_SPECIES]]
            ]
            
        [[FOR_EACH_METABOLISM_(EFFECTS_GROUP_HAPPINESS_FOR_METABOLISM_)]]
'''

// troops.macro needs base_prod.macros
#include "/scripting/common/base_prod.macros" 
#include "/scripting/species/common/detection.macros"
#include "/scripting/species/common/general.macros"
#include "/scripting/common/stealth.macros" 
#include "/scripting/species/common/stealth.macros"
#include "/scripting/species/common/troops.macros"