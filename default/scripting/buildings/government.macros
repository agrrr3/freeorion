CONDITION_GOVERNMENT_TYPE_IS
'''/* Only may build if the government type is @1@ */ // /*
    Number low = 1 condition = And [
        Capital
        Contains condition = Building name = "BLD_IMPERIAL_GOVERNMENT_TYPE_@1@"
        OwnedBy empire = Source.Owner
    ]'''


CONDITION_GOVERNMENT_TYPE_IS_NOT_
'''/* if government type is different from @1@ */ Number low = 0 high = 0 condition = And [
        Capital
        OwnedBy empire = Source.Owner
        Contains condition = Building name = "BLD_IMPERIAL_GOVERNMENT_TYPE_@1@"
    ]'''

CONDITION_NO_SUCH_GOVERNMENT_SEAT_EXISTS
'''/* No building for the @1@ government seat exists in the empire */ // /*
    Number low = 0 high = 0 condition = Building name = "BLD_IMPERIAL_GOVERNMENT_SEAT_@1@"
'''

CONDITION_NO_GOVERNMENT_TYPE_EXISTS
'''Number low = 0 high = 0 condition = And [
            Planet
            Enqueued
                type = Building
                empire = Source.Owner
            Or [
                Enqueued type = Building name = "BLD_IMPERIAL_GOVERNMENT_TYPE_COUNCIL"
                Enqueued type = Building name = "BLD_IMPERIAL_GOVERNMENT_TYPE_DEMOCRACY"
                Enqueued type = Building name = "BLD_IMPERIAL_GOVERNMENT_TYPE_WARLORD"
            ]
        ]'''

ENQUEUELOCATION_GOVERNMENT_TYPE
'''And [
        // On your own capital
        Capital
        OwnedBy empire = Source.Owner

        // can't enqueue if already a type of government exists
        Not HasTag name = "GOVERNMENT_TYPE"
        
        // must have a non-trivial population
        TargetPopulation low = 1

        // can't enqueue if already have an enqueued government type anywhere
        [[CONDITION_NO_GOVERNMENT_TYPE_EXISTS]]
    ]'''

ENQUEUELOCATION_GOVERNMENT_SEAT
'''And [
        // On one of your planets
        Planet
        OwnedBy empire = Source.Owner

        // must have a non-trivial population
        TargetPopulation low = 1

        // can't enqueue if this building is enqueued anywhere
        [[ENQUEUE_BUILD_ONE_PER_EMPIRE(BLD_IMPERIAL_GOVERNMENT_SEAT_@1@)]]
    ]'''

/* Destroys a government seat if the government is down.
 #1 <The government type name>
 #2 <The seat name>
 #3 <placeholder for a stackinggroup declaration> - to prevent benefits while the seat gets destroyed
 XXX not sure if stackinggroup works at all here
 XXX should check if it is possible to have multiple stacking groups
*/
EFFECTS_GROUP_COLLAPSE_SEAT_3
'''EffectsGroup
            scope = Source
            activation = [[CONDITION_GOVERNMENT_TYPE_IS_NOT_(@1@)]]
            @3@
            priority = [[EARLY_PRIORITY]]
            effects = [
                Destroy 
                GenerateSitRepMessage
                    message = "EFFECT_GOVERNMENT_SEAT_COLLAPSES"
                    label = "EFFECT_GOVERNMENT_SEAT_COLLAPSES_LABEL"
                    icon = "icons/building/heavy_mining_processor.png"
                    parameters = [
                        tag = "buildingtype" data = "BLD_IMPERIAL_GOVERNMENT_SEAT_COUNCIL_@2@"
                        tag = "planet" data = Source.PlanetID
                    ]
                    empire = Source.Owner
            ]'''

#include "/scripting/common/priorities.macros"
